connectivity.target.betw[[3]][['querMat']],
"CSmfa",factor.plot=1,which=c(),
result.available=connectivity.target.betw[[3]][['MFA']],
plot.type='sweave')
df <- mfa@CS$CS.query
df$clusters <- as.factor(cut.cluster.targetMat[!cut.cluster.targetMat==3])
df <- df[order(df$clusters),]
plot<-ggplot(df,aes(x=c(1:47),y=Factor1,
label=rownames(mfa@CS$CS.query))) +
geom_point(aes(colour=clusters),size=5) +
geom_point(colour = "black",shape=1,size=5) +
geom_text_repel(aes(colour=colour.factor),show.legend = F,box.padding = unit(0.5, "lines"))+
# scale_colour_discrete(name=NULL,labels=c('Reference compound','Leave-one-out compound')) +
scale_colour_brewer(name=NULL,palette='Set1',
labels=c('Reference compound','Leave-one-out compound')) +
scale_x_continuous(breaks=pretty_breaks(),name="Compound Index") +
scale_y_continuous(name="Compound Loadings - Factor 1") +
ggtitle(paste("Cluster",3,"- Left out compound",compound.names[i])) + theme_bw()
plot
plot+  geom_point(aes(x=seq_along(mfa@CS$CS.ref$Factor1),y=mfa@CS$CS.ref$Factor1))
mfa@CS$CS.ref$Factor1
plot
plot+  geom_point(data = mfa$CS$CS.query, aes(x=seq_along(Factor1),y=Factor1))
plot+  geom_point(data = mfa@CS$CS.query, aes(x=seq_along(Factor1),y=Factor1))
plot<-ggplot(df,aes(x=c(1:47),y=Factor1,
label=rownames(mfa@CS$CS.query))) +
geom_point(aes(colour=clusters),size=5) +
geom_point(colour = "black",shape=1,size=5) +
# geom_text_repel(aes(colour=colour.factor),show.legend = F,box.padding = unit(0.5, "lines"))+
scale_colour_brewer(name=NULL,palette='Set1',
labels=c('Reference compound','Leave-one-out compound')) +
scale_x_continuous(breaks=pretty_breaks(),name="Compound Index") +
scale_y_continuous(name="Compound Loadings - Factor 1") +
ggtitle(paste("Cluster",3,"- Left out compound",compound.names[i])) + theme_bw()
plot
plot<-ggplot(df,aes(x=c(1:47),y=Factor1,
label=rownames(mfa@CS$CS.query))) +
geom_point(aes(colour=clusters),size=5) +
geom_point(colour = "black",shape=1,size=5) +
# geom_text_repel(aes(colour=colour.factor),show.legend = F,box.padding = unit(0.5, "lines"))+
scale_colour_brewer(name='Cluster',palette='Set1',
labels=clusters) +
scale_x_continuous(breaks=pretty_breaks(),name="Compound Index") +
scale_y_continuous(name="Compound Loadings - Factor 1") +
ggtitle(paste("Cluster",3,"- Left out compound",compound.names[i])) + theme_bw()
plot
plot<-ggplot(df,aes(x=c(1:47),y=Factor1,
label=rownames(mfa@CS$CS.query))) +
geom_point(aes(colour=clusters),size=5) +
geom_point(colour = "black",shape=1,size=5) +
# geom_text_repel(aes(colour=colour.factor),show.legend = F,box.padding = unit(0.5, "lines"))+
scale_colour_brewer(name='Cluster',palette='Set1',
labels=df$clusters) +
scale_x_continuous(breaks=pretty_breaks(),name="Compound Index") +
scale_y_continuous(name="Compound Loadings - Factor 1") +
ggtitle(paste("Cluster",3,"- Left out compound",compound.names[i])) + theme_bw()
plot
levels(df$clusters)
plot<-ggplot(df,aes(x=c(1:47),y=Factor1,
label=rownames(mfa@CS$CS.query))) +
geom_point(aes(colour=clusters),size=5) +
geom_point(colour = "black",shape=1,size=5) +
# geom_text_repel(aes(colour=colour.factor),show.legend = F,box.padding = unit(0.5, "lines"))+
scale_colour_brewer(name='Cluster',palette='Set1',
labels=levels(df$clusters)) +
scale_x_continuous(breaks=pretty_breaks(),name="Compound Index") +
scale_y_continuous(name="Compound Loadings - Factor 1") +
ggtitle(paste("Cluster",3,"- Left out compound",compound.names[i])) + theme_bw()
plot
plot+  geom_point(data = mfa@CS$CS.query, aes(x=seq_along(Factor1),y=Factor1))
dim(df)[2]
dim(df)[1]
mfa <- CSanalysis(connectivity.target.betw[[3]][['refMat']],
connectivity.target.betw[[3]][['querMat']],
"CSmfa",factor.plot=1,which=c(),
result.available=connectivity.target.betw[[3]][['MFA']],
plot.type='sweave')
df <- mfa@CS$CS.query
df$clusters <- as.factor(cut.cluster.targetMat[!cut.cluster.targetMat==3])
df <- df[order(df$clusters),]
plot<-ggplot(df,aes(x=seq_along(Factor1),y=Factor1,
label=rownames(mfa@CS$CS.query))) +
geom_point(aes(colour=clusters),size=5) +
geom_point(colour = "black",shape=1,size=5) +
# geom_text_repel(aes(colour=colour.factor),show.legend = F,box.padding = unit(0.5, "lines"))+
scale_colour_brewer(name='Clusters',palette='Set1',
labels=levels(df$clusters)) +
scale_x_continuous(breaks=pretty_breaks(),name="Compound Index") +
scale_y_continuous(name="Compound Loadings - Factor 1") +
ggtitle(paste("Cluster",3,"- Left out compound",compound.names[i])) + theme_bw()
plot+  geom_point(data = mfa@CS$CS.query, aes(x=c(dim(df)[1]+1:length(Factor1)+dim(df)[1]),y=Factor1))
mfa@CS$CS.query
mfa <- CSanalysis(connectivity.target.betw[[3]][['refMat']],
connectivity.target.betw[[3]][['querMat']],
"CSmfa",factor.plot=1,which=c(),
result.available=connectivity.target.betw[[3]][['MFA']],
plot.type='sweave')
df <- mfa@CS$CS.query
df$clusters <- as.factor(cut.cluster.targetMat[!cut.cluster.targetMat==3])
df <- df[order(df$clusters),]
plot<-ggplot(df,aes(x=seq_along(Factor1),y=Factor1,
label=rownames(mfa@CS$CS.query))) +
geom_point(aes(colour=clusters),size=5) +
geom_point(colour = "black",shape=1,size=5) +
# geom_text_repel(aes(colour=colour.factor),show.legend = F,box.padding = unit(0.5, "lines"))+
scale_colour_brewer(name='Clusters',palette='Set1',
labels=levels(df$clusters)) +
scale_x_continuous(breaks=pretty_breaks(),name="Compound Index") +
scale_y_continuous(name="Compound Loadings - Factor 1") +
ggtitle(paste("Cluster",3,"- Left out compound",compound.names[i])) + theme_bw()
plot+  geom_point(data = mfa@CS$CS.ref, aes(x=c(dim(df)[1]+1:length(Factor1)+dim(df)[1]),y=Factor1))
plot
mfa@CS$CS.ref
dim(df)[1]+1
length(Factor1)+dim(df)[1]
length(mfa@CS$CS.ref)+dim(df)[1]
dim(mfa@CS$CS.ref)+dim(df)[1]
length(mfa@CS$CS.ref$Factor1)+dim(df)[1]
plot+  geom_point(data = mfa@CS$CS.ref, aes(x=c(47:56),y=Factor1))
df <- rbind(mfa@CS$CS.query,mfa@CS$CS.ref)
df
mfa@CS$CS.ref
df <- mfa@CS$CS.query
df$clusters <- as.factor(cut.cluster.targetMat[!cut.cluster.targetMat==3])
df <- df[order(df$clusters),]
df.ref <- mfa@CS$CS.ref
df.ref$clusters <- as.factor(7)
df <- rbind(df,df.ref)
df
df <- mfa@CS$CS.query
df$clusters <- as.factor(cut.cluster.targetMat[!cut.cluster.targetMat==3])
df <- df[order(df$clusters),]
df.ref <- mfa@CS$CS.ref
df.ref$clusters <- as.factor(3)
df <- rbind(df,df.ref)
df <- mfa@CS$CS.query
df$clusters <- as.factor(cut.cluster.targetMat[!cut.cluster.targetMat==3])
df <- df[order(df$clusters),]
df.ref <- mfa@CS$CS.ref
df.ref$clusters <- as.factor(3)
df <- rbind(df.ref,df)
df
rownames(df)
ggplot(df,aes(x=seq_along(Factor1),y=Factor1,
label=rownames(df))) +
geom_point(aes(colour=clusters),size=5) +
geom_point(colour = "black",shape=1,size=5) +
# geom_text_repel(aes(colour=colour.factor),show.legend = F,box.padding = unit(0.5, "lines"))+
scale_colour_brewer(name='Clusters',palette='Set1',
labels=levels(df$clusters)) +
scale_x_continuous(breaks=pretty_breaks(),name="Compound Index") +
scale_y_continuous(name="Compound Loadings - Factor 1") +
ggtitle(paste("Reference cluster 3")) + theme_bw()
ggplot(df,aes(x=seq_along(Factor1),y=Factor1,
label=rownames(df))) +
geom_point(aes(colour=clusters),size=5) +
geom_point(colour = "black",shape=1,size=5) +
geom_text_repel(aes(colour=colour.factor),show.legend = F,box.padding = unit(0.5, "lines"))+
scale_colour_brewer(name='Clusters',palette='Set1',
labels=levels(df$clusters)) +
scale_x_continuous(breaks=pretty_breaks(),name="Compound Index") +
scale_y_continuous(name="Compound Loadings - Factor 1") +
ggtitle(paste("Reference cluster 3")) + theme_bw()
ggplot(df,aes(x=seq_along(Factor1),y=Factor1,
label=rownames(df))) +
geom_point(aes(colour=clusters),size=5) +
geom_point(colour = "black",shape=1,size=5) +
geom_text_repel(aes(colour=clusters,show.legend = F,box.padding = unit(0.5, "lines"))+
scale_colour_brewer(name='Clusters',palette='Set1',
labels=levels(df$clusters)) +
scale_x_continuous(breaks=pretty_breaks(),name="Compound Index") +
scale_y_continuous(name="Compound Loadings - Factor 1") +
ggtitle(paste("Reference cluster 3")) + theme_bw()
ggplot(df,aes(x=seq_along(Factor1),y=Factor1,
label=rownames(df))) +
geom_point(aes(colour=clusters),size=5) +
geom_point(colour = "black",shape=1,size=5) +
geom_text_repel(aes(colour=clusters),show.legend = F,box.padding = unit(0.5, "lines"))+
scale_colour_brewer(name='Clusters',palette='Set1',
labels=levels(df$clusters)) +
scale_x_continuous(breaks=pretty_breaks(),name="Compound Index") +
scale_y_continuous(name="Compound Loadings - Factor 1") +
ggtitle(paste("Reference cluster 3")) + theme_bw()
ggplot(df,aes(x=seq_along(Factor1),y=Factor1,
label=rownames(df))) +
geom_point(aes(colour=clusters),size=5) +
geom_point(colour = "black",shape=1,size=5) +
# geom_text_repel(aes(colour=clusters),show.legend = F,box.padding = unit(0.5, "lines"))+
scale_colour_brewer(name='Clusters',palette='Set1',
labels=levels(df$clusters)) +
scale_x_continuous(breaks=pretty_breaks(),name="Compound Index") +
scale_y_continuous(name="Compound Loadings - Factor 1") +
ggtitle(paste("Reference cluster 3")) + theme_bw()
ggplot(df,aes(x=seq_along(Factor1),y=Factor1,
label=rownames(df))) +
geom_point(aes(colour=clusters),size=5) +
geom_point(colour = "black",shape=1,size=5) +
geom_text_repel(aes(colour=clusters),show.legend = F,box.padding = unit(0.5, "lines"))
ggplot(df,aes(x=seq_along(Factor1),y=Factor1,
label=rownames(df))) +
geom_point(aes(colour=clusters),size=5) +
geom_point(colour = "black",shape=1,size=5) +
geom_text_repel(aes(colour=clusters),show.legend = F,box.padding = unit(0.5, "lines"))+
scale_colour_brewer(name='Clusters',palette='Set1',
labels=levels(df$clusters)) +
scale_x_continuous(breaks=pretty_breaks(),name="Compound Index") +
scale_y_continuous(name="Compound Loadings - Factor 1") +
ggtitle(paste("Reference cluster 3")) + theme_bw()
geom_text_repel()
?geom_text_repel
ggplot(df,aes(x=seq_along(Factor1),y=Factor1,
label=rownames(df))) +
geom_point(aes(colour=clusters),size=6) +
geom_point(colour = "black",shape=1,size=6) +
geom_text_repel(aes(colour=clusters),show.legend = F,box.padding = unit(0.5, "lines"))+
scale_colour_brewer(name='Clusters',palette='Dark2',
labels=levels(df$clusters)) +
scale_x_continuous(breaks=pretty_breaks(),name="Compound Index") +
scale_y_continuous(name="Compound Loadings - Factor 1") +
ggtitle(paste("Reference cluster 3")) + theme_bw()
ggplot(df,aes(x=seq_along(Factor1),y=Factor1,
label=rownames(df))) +
geom_point(aes(colour=clusters),size=6) +
geom_point(colour = "black",shape=1,size=6) +
geom_text_repel(aes(colour=clusters),size=20,show.legend = F,box.padding = unit(0.5, "lines"))+
scale_colour_brewer(name='Clusters',palette='Dark2',
labels=levels(df$clusters)) +
scale_x_continuous(breaks=pretty_breaks(),name="Compound Index") +
scale_y_continuous(name="Compound Loadings - Factor 1") +
ggtitle(paste("Reference cluster 3")) + theme_bw()
ggplot(df,aes(x=seq_along(Factor1),y=Factor1,
label=rownames(df))) +
geom_point(aes(colour=clusters),size=6) +
geom_point(colour = "black",shape=1,size=6) +
geom_text_repel(aes(colour=clusters),size=1,show.legend = F,box.padding = unit(0.5, "lines"))+
scale_colour_brewer(name='Clusters',palette='Dark2',
labels=levels(df$clusters)) +
scale_x_continuous(breaks=pretty_breaks(),name="Compound Index") +
scale_y_continuous(name="Compound Loadings - Factor 1") +
ggtitle(paste("Reference cluster 3")) + theme_bw()
ggplot(df,aes(x=seq_along(Factor1),y=Factor1,
label=rownames(df))) +
geom_point(aes(colour=clusters),size=6) +
geom_point(colour = "black",shape=1,size=6) +
geom_text_repel(aes(colour=clusters),size=2,show.legend = F,box.padding = unit(0.5, "lines"))+
scale_colour_brewer(name='Clusters',palette='Dark2',
labels=levels(df$clusters)) +
scale_x_continuous(breaks=pretty_breaks(),name="Compound Index") +
scale_y_continuous(name="Compound Loadings - Factor 1") +
ggtitle(paste("Reference cluster 3")) + theme_bw()
ggplot(df,aes(x=seq_along(Factor1),y=Factor1,
label=rownames(df))) +
geom_point(aes(colour=clusters),size=4) +
geom_point(colour = "black",shape=1,size=4) +
geom_text_repel(aes(colour=clusters),size=3,show.legend = F,box.padding = unit(0.5, "lines"))+
scale_colour_brewer(name='Clusters',palette='Dark2',
labels=levels(df$clusters)) +
scale_x_continuous(breaks=pretty_breaks(),name="Compound Index") +
scale_y_continuous(name="Compound Loadings - Factor 1") +
ggtitle(paste("Reference cluster 3")) + theme_bw()
ggplot(df,aes(x=seq_along(Factor1),y=Factor1,
label=rownames(df))) +
geom_point(aes(colour=clusters),size=4) +
geom_point(colour = "black",shape=1,size=4) +
geom_text_repel(aes(colour=clusters),size=3,show.legend = F,box.padding = unit(0.2, "lines"))+
scale_colour_brewer(name='Clusters',palette='Dark2',
labels=levels(df$clusters)) +
scale_x_continuous(breaks=pretty_breaks(),name="Compound Index") +
scale_y_continuous(name="Compound Loadings - Factor 1") +
ggtitle(paste("Reference cluster 3")) + theme_bw()
ggplot(df,aes(x=seq_along(Factor1),y=Factor1,
label=rownames(df))) +
geom_point(aes(colour=clusters),size=4) +
geom_point(colour = "black",shape=1,size=4) +
geom_text_repel(aes(colour=clusters),size=3,show.legend = F,box.padding = unit(1, "lines"))+
scale_colour_brewer(name='Clusters',palette='Dark2',
labels=levels(df$clusters)) +
scale_x_continuous(breaks=pretty_breaks(),name="Compound Index") +
scale_y_continuous(name="Compound Loadings - Factor 1") +
ggtitle(paste("Reference cluster 3")) + theme_bw()
mfa <- CSanalysis(connectivity.target.betw[[1]][['refMat']],
connectivity.target.betw[[1]][['querMat']],
"CSmfa",factor.plot=2,which=c(),
result.available=connectivity.target.betw[[1]][['MFA']],
plot.type='sweave')
df <- mfa@CS$CS.query
df
mfa <- CSanalysis(connectivity.target.betw[[3]][['refMat']],
connectivity.target.betw[[3]][['querMat']],
"CSmfa",factor.plot=1,which=c(),
result.available=connectivity.target.betw[[3]][['MFA']],
plot.type='sweave')
df <- mfa@CS$CS.query
df$clusters <- as.factor(cut.cluster.targetMat[!cut.cluster.targetMat==3])
df <- df[order(df$clusters),]
df.ref <- mfa@CS$CS.ref
df.ref$clusters <- as.factor(3)
df <- rbind(df.ref,df)
ggplot(df,aes(x=seq_along(Factor1),y=Factor1,
label=rownames(df))) +
geom_point(aes(colour=clusters),size=4) +
geom_point(colour = "black",shape=1,size=4) +
geom_text_repel(aes(colour=clusters),size=3,show.legend = F,box.padding = unit(0.4, "lines"))+
scale_colour_brewer(name='Clusters',palette='Dark2',
labels=levels(df$clusters)) +
scale_x_continuous(breaks=pretty_breaks(),name="Compound Index") +
scale_y_continuous(name="Compound Loadings - Factor 1") +
ggtitle(paste("Reference cluster 3 - target predictions - factor 1")) + theme_bw()
mfa <- CSanalysis(connectivity.target.betw[[1]][['refMat']],
connectivity.target.betw[[1]][['querMat']],
"CSmfa",factor.plot=2,which=c(),
result.available=connectivity.target.betw[[1]][['MFA']],
plot.type='sweave')
df <- mfa@CS$CS.query
df$clusters <- as.factor(cut.cluster.targetMat[!cut.cluster.targetMat==1])
df <- df[order(df$clusters),]
df.ref <- mfa@CS$CS.ref
df.ref$clusters <- as.factor(1)
df <- rbind(df.ref,df)
ggplot(df,aes(x=seq_along(Factor1),y=Factor1,
label=rownames(df))) +
geom_point(aes(colour=clusters),size=4) +
geom_point(colour = "black",shape=1,size=4) +
geom_text_repel(aes(colour=clusters),size=3,show.legend = F,box.padding = unit(0.4, "lines"))+
scale_colour_brewer(name='Clusters',palette='Dark2',
labels=levels(df$clusters)) +
scale_x_continuous(breaks=pretty_breaks(),name="Compound Index") +
scale_y_continuous(name="Compound Loadings - Factor 2") +
ggtitle(paste("Reference cluster 1 - target predictions - factor 2")) + theme_bw()
mfa <- CSanalysis(connectivity.target.betw[[1]][['refMat']],
connectivity.target.betw[[1]][['querMat']],
"CSmfa",factor.plot=2,which=c(),
result.available=connectivity.target.betw[[1]][['MFA']],
plot.type='sweave')
df <- mfa@CS$CS.query
df$clusters <- as.factor(cut.cluster.targetMat[!cut.cluster.targetMat==1])
df <- df[order(df$clusters),]
df.ref <- mfa@CS$CS.ref
df.ref$clusters <- as.factor(1)
df <- rbind(df.ref,df)
ggplot(df,aes(x=seq_along(Factor2),y=Factor1,
label=rownames(df))) +
geom_point(aes(colour=clusters),size=4) +
geom_point(colour = "black",shape=1,size=4) +
geom_text_repel(aes(colour=clusters),size=3,show.legend = F,box.padding = unit(0.4, "lines"))+
scale_colour_brewer(name='Clusters',palette='Dark2',
labels=levels(df$clusters)) +
scale_x_continuous(breaks=pretty_breaks(),name="Compound Index") +
scale_y_continuous(name="Compound Loadings - Factor 2") +
ggtitle(paste("Reference cluster 1 - target predictions - factor 2")) + theme_bw()
mfa <- CSanalysis(connectivity.target.betw[[3]][['refMat']],
connectivity.target.betw[[3]][['querMat']],
"CSmfa",factor.plot=1,which=c(),
result.available=connectivity.target.betw[[3]][['MFA']],
plot.type='sweave')
df <- mfa@CS$CS.query
df$clusters <- as.factor(cut.cluster.targetMat[!cut.cluster.targetMat==3])
df <- df[order(df$clusters),]
df.ref <- mfa@CS$CS.ref
df.ref$clusters <- as.factor(3)
df <- rbind(df.ref,df)
ggplot(df,aes(x=seq_along(Factor1),y=Factor1,
label=rownames(df))) +
geom_point(aes(colour=clusters),size=4) +
geom_point(colour = "black",shape=1,size=4) +
geom_text_repel(aes(colour=clusters),size=3,show.legend = F,box.padding = unit(0.4, "lines"))+
scale_colour_brewer(name='Clusters',palette='Dark2',
labels=levels(df$clusters)) +
scale_x_continuous(breaks=pretty_breaks(),name="Compound Index") +
scale_y_continuous(name="Compound Loadings - Factor 1") +
ggtitle(paste("Reference cluster 3 - target predictions - factor 1")) + theme_bw()
mfa <- CSanalysis(connectivity.target.betw[[1]][['refMat']],
connectivity.target.betw[[1]][['querMat']],
"CSmfa",factor.plot=1,which=c(),
result.available=connectivity.target.betw[[1]][['MFA']],
plot.type='sweave')
df <- mfa@CS$CS.query
df$clusters <- as.factor(cut.cluster.targetMat[!cut.cluster.targetMat==1])
df <- df[order(df$clusters),]
df.ref <- mfa@CS$CS.ref
df.ref$clusters <- as.factor(1)
df <- rbind(df.ref,df)
print(ggplot(df,aes(x=seq_along(Factor2),y=Factor2,
label=rownames(df))) +
geom_point(aes(colour=clusters),size=4) +
geom_point(colour = "black",shape=1,size=4) +
geom_text_repel(aes(colour=clusters),size=3,show.legend = F,box.padding = unit(0.4, "lines"))+
scale_colour_brewer(name='Clusters',palette='Dark2',
labels=levels(df$clusters)) +
scale_x_continuous(breaks=pretty_breaks(),name="Compound Index") +
scale_y_continuous(name="Compound Loadings - Factor 2") +
ggtitle(paste("Reference cluster 1 - target predictions - factor 2")) + theme_bw())
mfa <- CSanalysis(connectivity.target.betw[[1]][['refMat']],
connectivity.target.betw[[1]][['querMat']],
"CSmfa",factor.plot=2,which=c(),
result.available=connectivity.target.betw[[1]][['MFA']],
plot.type='sweave')
df <- mfa@CS$CS.query
df$clusters <- as.factor(cut.cluster.targetMat[!cut.cluster.targetMat==1])
df <- df[order(df$clusters),]
df.ref <- mfa@CS$CS.ref
df.ref$clusters <- as.factor(1)
df <- rbind(df.ref,df)
print(ggplot(df,aes(x=seq_along(Factor2),y=Factor2,
label=rownames(df))) +
geom_point(aes(colour=clusters),size=4) +
geom_point(colour = "black",shape=1,size=4) +
geom_text_repel(aes(colour=clusters),size=3,show.legend = F,box.padding = unit(0.4, "lines"))+
scale_colour_brewer(name='Clusters',palette='Dark2',
labels=levels(df$clusters)) +
scale_x_continuous(breaks=pretty_breaks(),name="Compound Index") +
scale_y_continuous(name="Compound Loadings - Factor 2") +
ggtitle(paste("Reference cluster 1 - target predictions - factor 2")) + theme_bw())
for (i in c(3,7)) {
print(paste('Reference cluster is',i))
plot_MFA_fingerprint_between(i,1)
}
mfa <- CSanalysis(connectivity.target.betw[[3]][['refMat']],
connectivity.target.betw[[3]][['querMat']],
"CSmfa",factor.plot=1,which=c(4),
result.available=connectivity.target.betw[[3]][['MFA']],
plot.type='sweave')
mfa <- CSanalysis(connectivity.target.betw[[3]][['refMat']],
connectivity.target.betw[[3]][['querMat']],
"CSmfa",factor.plot=1,which=c(3),
result.available=connectivity.target.betw[[3]][['MFA']],
plot.type='sweave')
mfa <- CSanalysis(connectivity.target.betw[[3]][['refMat']],
connectivity.target.betw[[3]][['querMat']],
"CSmfa",factor.plot=1,which=c(2),
result.available=connectivity.target.betw[[3]][['MFA']],
plot.type='sweave')
mfa <- CSanalysis(connectivity.target.betw[[3]][['refMat']],
connectivity.target.betw[[3]][['querMat']],
"CSmfa",factor.plot=2,which=c(2),
result.available=connectivity.target.betw[[3]][['MFA']],
plot.type='sweave')
mfa@CS$CS.ref
abs(mfa@CS$CS.ref)
mean(abs(mfa@CS$CS.ref))
abs(mfa@CS$CS.ref)
abs(mfa@CS$CS.ref[:,1])
abs(mfa@CS$CS.ref$Factor2)
mean(abs(mfa@CS$CS.ref$Factor2))
for (j in rownames(targetMat)[cut.cluster.targetMat==1,drop=F]){
print(paste('Query compound is',j))
print(redo_MFA_target_within(1,j,2)@CS$CS.query)
}
for (j in rownames(targetMat)[cut.cluster.targetMat==3,drop=F]){
print(paste('Query compound is',j))
print(redo_MFA_target_within(3,j,2)@CS$CS.query)
}
for (j in rownames(targetMat)[cut.cluster.targetMat==3,drop=F]){
print(paste('Query compound is',j))
print(mean(abs(redo_MFA_target_within(3,j,2)@CS$CS.query$Factor2)))
}
mean(abs(CSanalysis(connectivity.target.betw[[3]][['refMat']],
connectivity.target.betw[[3]][['querMat']],
"CSmfa",factor.plot=2,which=c(2),
result.available=connectivity.target.betw[[3]][['MFA']],
plot.type='sweave')@CS$CS.query$Factor2))
mean(abs(CSanalysis(connectivity.target.betw[[3]][['refMat']],
connectivity.target.betw[[3]][['querMat']],
"CSmfa",factor.plot=2,which=c(2,3),
result.available=connectivity.target.betw[[3]][['MFA']],
plot.type='sweave')@CS$CS.query$Factor2))
CSanalysis(connectivity.target.betw[[3]][['refMat']],
connectivity.target.betw[[3]][['querMat']],
"CSmfa",factor.plot=2,which=c(2,3),
result.available=connectivity.target.betw[[3]][['MFA']],
plot.type='sweave')@CS$CS.query$Factor2
mean(abs(CSanalysis(connectivity.target.betw[[3]][['refMat']],
connectivity.target.betw[[3]][['querMat']],
"CSmfa",factor.plot=2,which=c(2,3),
result.available=connectivity.target.betw[[3]][['MFA']],
plot.type='sweave')@CS$CS.ref$Factor2))
mfa <- CSanalysis(connectivity.target.betw[[3]][['refMat']],
connectivity.target.betw[[3]][['querMat']],
"CSmfa",factor.plot=2,which=c(2),
result.available=connectivity.target.betw[[3]][['MFA']],
plot.type='sweave')
mfa <- CSanalysis(connectivity.target.betw[[3]][['refMat']],
connectivity.target.betw[[3]][['querMat']],
"CSmfa",factor.plot=2,which=c(3),
result.available=connectivity.target.betw[[3]][['MFA']],
plot.type='sweave')
mfa <- CSanalysis(connectivity.target.betw[[3]][['refMat']],
connectivity.target.betw[[3]][['querMat']],
"CSmfa",factor.plot=2,which=c(4),
result.available=connectivity.target.betw[[3]][['MFA']],
plot.type='sweave')
mfa <- CSanalysis(connectivity.target.betw[[3]][['refMat']],
connectivity.target.betw[[3]][['querMat']],
"CSmfa",factor.plot=2,which=c(5),
result.available=connectivity.target.betw[[3]][['MFA']],
plot.type='sweave')
mfa <- CSanalysis(connectivity.target.betw[[3]][['refMat']],
connectivity.target.betw[[3]][['querMat']],
"CSmfa",factor.plot=1,which=c(4),
result.available=connectivity.target.betw[[3]][['MFA']],
plot.type='sweave')
mfa <- CSanalysis(connectivity.target.betw[[3]][['refMat']],
connectivity.target.betw[[3]][['querMat']],
"CSmfa",factor.plot=2,which=c(6),
result.available=connectivity.target.betw[[3]][['MFA']],
plot.type='sweave')
?`CSanalysis,matrix,matrix,CSsmfa-method`
mfa <- CSanalysis(connectivity.target.betw[[3]][['refMat']],
connectivity.target.betw[[3]][['querMat']],
"CSmfa",factor.plot=1,which=c(6),
result.available=connectivity.target.betw[[3]][['MFA']],
plot.type='sweave',profile.type='cmpd')
